name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Lint code
      run: |
        npm run lint --workspace=apps/backend
        npm run lint --workspace=apps/dashboard

    - name: Type check
      run: |
        npm run build --workspace=apps/backend
        npm run build --workspace=apps/dashboard

  contracts-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Compile contracts
      run: npm run compile --workspace=contracts

    - name: Test contracts
      run: npm run test --workspace=contracts

    - name: Contract coverage
      run: npm run coverage --workspace=contracts

  backend-test:
    runs-on: ubuntu-latest
    
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Test backend
      run: npm run test --workspace=apps/backend
      env:
        REDIS_HOST: localhost
        REDIS_PORT: 6379
        NODE_ENV: test

  build-and-push:
    needs: [lint-and-test, contracts-test, backend-test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push backend image
      if: secrets.DOCKER_USERNAME != ''
      uses: docker/build-push-action@v5
      with:
        context: ./apps/backend
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/zksalarystream-backend:latest

    - name: Skip Docker push (no credentials)
      if: secrets.DOCKER_USERNAME == ''
      run: echo "Skipping Docker push - no credentials provided" 